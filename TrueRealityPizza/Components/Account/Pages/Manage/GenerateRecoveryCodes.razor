@page "/Account/Manage/GenerateRecoveryCodes"

@using Microsoft.AspNetCore.Identity

@inject UserManager<PizzaStoreUser> UserManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<GenerateRecoveryCodes> Logger

<PageTitle>生成双重身份验证 (2FA) 恢复代码</PageTitle>

@if (recoveryCodes is not null) {
    <div class="row">
        <div class="col-md-6">
            <ShowRecoveryCodes RecoveryCodes="recoveryCodes.ToArray()" StatusMessage="@message"/>
        </div>
    </div>
}
else {
    <h3>生成双重身份验证 (2FA) 恢复代码</h3>
    <div class="alert alert-warning" role="alert">
        <p>
            <span class="glyphicon glyphicon-warning-sign"></span>
            <strong>请将这些代码保存在安全的地方。</strong>
        </p>
        <p>
            如果您丢失了设备且没有恢复代码，您将失去对账户的访问权限。
        </p>
        <p>
            生成新的恢复代码不会更改身份验证器应用中使用的密钥。如果您希望更改身份验证器应用中使用的密钥，您应该 <a href="Account/Manage/ResetAuthenticator">重置您的身份验证器密钥。</a>
        </p>
    </div>
    <div>
        <form @formname="generate-recovery-codes" @onsubmit="OnSubmitAsync" method="post">
            <AntiforgeryToken/>
            <button class="btn btn-danger" type="submit">生成恢复代码</button>
        </form>
    </div>
}

@code {
    private string? message;
    private PizzaStoreUser user = default!;
    private IEnumerable<string>? recoveryCodes;

    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync() {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);

        var isTwoFactorEnabled = await UserManager.GetTwoFactorEnabledAsync(user);
        if (!isTwoFactorEnabled) {
            throw new InvalidOperationException("无法为用户生成恢复代码，因为他们未启用2FA。");
        }
    }

    private async Task OnSubmitAsync() {
        var userId = await UserManager.GetUserIdAsync(user);
        recoveryCodes = await UserManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);
        message = "您已生成新的恢复代码。";

        Logger.LogInformation("ID为 '{UserId}' 的用户生成了新的2FA恢复代码。", userId);
    }

}

